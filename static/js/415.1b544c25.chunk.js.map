{"version":3,"file":"static/js/415.1b544c25.chunk.js","mappings":"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","sources":["pages/Movie/SerchBar.jsx","webpack://react-homework-template/./src/pages/Movie/Movie.module.css?8f7f","pages/Movie/Movies.jsx","services/api.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport const SerchBar = ({ setQuery }) => {\n  const [inputValue, setInputValue] = useState('');\n  // const [searchParams, setSearchParams] = useSearchParams();\n  // const name = searchParams.get('name') || '';\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setQuery(inputValue);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Search movie\"\n        name=\"inputValue\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n        required\n      />\n      <button type=\"submit\">\n        <span>Search</span>\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Movie_card__dmzbb\",\"ul\":\"Movie_ul__OqQpc\",\"poster\":\"Movie_poster__hqAZH\",\"title\":\"Movie_title__dzHgI\"};","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesBySerch } from 'services/api';\nimport { SerchBar } from './SerchBar';\nimport s from './Movie.module.css';\n\nconst Movies = () => {\n  // const [inputValue, setInputValue] = useState('');\n  const [serchs, setSerch] = useState([]);\n\n  const location = useLocation();\n  console.log(location);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('movie') ?? '';\n  console.log(movie);\n  const updateQueryString = query => {\n    query !== '' ? setSearchParams({ movie: query }) : setSearchParams({});\n  };\n\n  useEffect(() => {\n    async function getNewMovie() {\n      try {\n        const serchs = await fetchMoviesBySerch(movie);\n        setSerch(serchs);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getNewMovie();\n  }, [movie]);\n\n  return (\n    <div>\n      {/* <h2>Movies</h2> */}\n      {/* <hr /> */}\n      <SerchBar setQuery={updateQueryString} />\n      <ul className={s.ul}>\n        {serchs.map(serch => (\n          <li className={s.card} key={serch.id}>\n            <Link\n              state={{ from: location }}\n              to={`/movies/${serch.id.toString()}`}\n            >\n              <img\n                className={s.poster}\n                src={`https://image.tmdb.org/t/p/w500${serch.poster_path}`}\n                width=\"120\"\n                alt={serch.media_type}\n              />\n              <p className={s.title}>{serch.title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7b2ac305a76388b1525771ad00b10673';\n\n//const API_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\n\nexport const fetchMoviesTrend = async () => {\n  const { data } = await axios.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMoviesById = async id => {\n  const { data } = await axios.get(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMoviesBySerch = async inputValue => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: inputValue,\n    },\n  });\n  return data.results;\n};\nexport const fetchMoviesReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?language=en-US&page=1`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return data;\n};\nexport const fetchMoviesCast = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/credits?language=en-US&page=1`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return data;\n};\n"],"names":["SerchBar","_ref","setQuery","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_jsxs","onSubmit","event","preventDefault","children","_jsx","type","placeholder","name","value","onChange","e","target","required","_searchParams$get","serchs","setSerch","location","useLocation","console","log","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movie","get","useEffect","_getNewMovie","_asyncToGenerator","_regeneratorRuntime","_callee","_serchs","_context","prev","next","fetchMoviesBySerch","sent","t0","stop","apply","arguments","getNewMovie","query","className","s","map","serch","Link","state","from","to","concat","id","toString","src","poster_path","width","alt","media_type","title","axios","API_KEY","fetchMoviesTrend","_yield$axios$get","data","params","api_key","abrupt","fetchMoviesById","_ref2","_callee2","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","results","_x2","fetchMoviesReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMoviesCast","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}